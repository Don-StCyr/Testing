GIT

@ Basic Commands of Everyday Git
@ Check Commit History

MUST: set Git bash to the working directory (Documents/Git/GitRepo)

pwd - print working directory
copy con - create new empty file
git config --global user.name "DonS" - sets username
git config --global user.email "dstcyr@scriptpro.com" - sets email
git config --list - gets all global info
git config user.name - gets just the username
man git - entire manual
porcelain - high level commands
plumbing - low level commands
git help config - opens the commands for config
git help - short list of porcelain commands
repo - repository or project
git init - initializes a new repo (must be inside the save directory)
clear - moves the cmd prompt to the top of the window
git status - shows the status of the project, if there are any changes or new files
touch filename - Adds an empty file to the directory
git add filename - adds the file to Git so it will be tracked, also adds modified files to staged
ls - lists files in directory
open -a (textEditor) filename - opens the file in the text editor
git status -s - (or gi status --short) short status, M = Modified, A = New file added to staging area, ?? = New file untracked by Git
git diff - shows changes that are staged & ready to be committed & changes made, but not staged
git diff --staged - compares staged files to last committed snapshot
git diff --staged --no-renames - 
git commit -a -m "message text" - commits the changes (can skip the stage), -m adds a message
git push origin master - publishes the local commits to the remote name (origin) and branch (master)
git log - lists the commit log
git log -1 - limits the results to 1
git log 


Files Tracked by Git
	Committed: Unmodified changes from the last commit snapshot
	Modified: Changes made to files since last commit snapshot
	Staged: Changes marked to be added into the next commit snapshot


